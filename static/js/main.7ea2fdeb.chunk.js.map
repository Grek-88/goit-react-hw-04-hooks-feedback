{"version":3,"sources":["components/BtnFeedback/BtnFeedback.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/StatisticItem/StatisticItem.jsx","components/StatisticsList/StatisticsList.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App/App.js","index.js","components/App/App.module.css"],"names":["BtnFeedback","props","style","margin","cursor","type","onClick","text","FeedbackOptions","onLeaveFeedback","StatisticItem","content","data","StatisticsList","good","neutral","bad","total","positivePercentage","propTypes","PropTypes","number","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","className","s","e","target","textContent","prevGood","prevNesetNeutral","prevBsetBad","toFixed","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PAAe,SAASA,EAAYC,GAClC,OACE,wBACEC,MAAO,CAAEC,OAAQ,OAAQC,OAAQ,WACjCC,KAAK,SACLC,QAASL,EAAMK,QAHjB,SAKGL,EAAMM,OCLE,SAASC,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,qCACE,cAACT,EAAD,CAAaO,KAAK,OAAOD,QAASG,IAClC,cAACT,EAAD,CAAaO,KAAK,UAAUD,QAASG,IACrC,cAACT,EAAD,CAAaO,KAAK,MAAMD,QAASG,O,oBCCxBC,EARO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAChC,OACE,8BACGD,EADH,KACcC,EACC,sBAAZD,EAAkC,IAAM,OCAhC,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qCACE,cAAC,EAAD,CAAeP,QAAQ,OAAOC,KAAME,IACpC,cAAC,EAAD,CAAeH,QAAQ,UAAUC,KAAMG,IACvC,cAAC,EAAD,CAAeJ,QAAQ,MAAMC,KAAMI,IACnC,cAAC,EAAD,CAAeL,QAAQ,QAAQC,KAAMK,IACrC,cAAC,EAAD,CAAeN,QAAQ,oBAAoBC,KAAMM,OAKvDR,EAAcS,UAAY,CACxBL,KAAMM,IAAUC,OAChBN,QAASK,IAAUC,OACnBL,IAAKI,IAAUC,OACfJ,MAAOG,IAAUC,OACjBH,mBAAoBE,IAAUC,QC3BhC,IAOeC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,MCFUC,EADM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCS3B,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOb,EAAP,KAAgBe,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOZ,EAAP,KAAYe,EAAZ,KAcA,SAASC,IAEP,OADclB,EAAOC,EAAUC,EAUjC,OACE,sBAAKiB,UAAWC,IAAEP,IAAlB,UACE,cAAC,EAAD,CAASJ,MAAM,wBAAf,SACE,cAACf,EAAD,CAAiBC,gBA1BvB,SAAsB0B,GACS,SAAzBA,EAAEC,OAAOC,aACXR,GAAQ,SAACS,GAAD,OAAcA,EAAW,KAEN,YAAzBH,EAAEC,OAAOC,aACXP,GAAW,SAACS,GAAD,OAAsBA,EAAmB,KAEzB,QAAzBJ,EAAEC,OAAOC,aACXN,GAAO,SAACS,GAAD,OAAiBA,EAAc,UAoBtC,cAAC,EAAD,CAASjB,MAAM,aAAf,SACGS,IACC,cAACnB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,IACPd,mBAlBV,WACE,IAAMD,EAAQe,IAEd,OADiBf,EAASH,EAAOG,EAAS,IAAM,GAAGwB,QAAQ,GAgB/BC,KAGtB,cAAC,EAAD,CAAchB,QAAQ,2B,MC7ChCiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClB,EAAD,MAEFmB,SAASC,eAAe,U,kBCV1BC,EAAOC,QAAU,CAAC,IAAM,oB","file":"static/js/main.7ea2fdeb.chunk.js","sourcesContent":["export default function BtnFeedback(props) {\r\n  return (\r\n    <button\r\n      style={{ margin: \"15px\", cursor: \"pointer\" }}\r\n      type=\"button\"\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  );\r\n}\r\n","import BtnFeedback from \"../BtnFeedback/BtnFeedback\";\r\n\r\nexport default function FeedbackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      <BtnFeedback text=\"Good\" onClick={onLeaveFeedback} />\r\n      <BtnFeedback text=\"Neutral\" onClick={onLeaveFeedback} />\r\n      <BtnFeedback text=\"Bad\" onClick={onLeaveFeedback} />\r\n    </>\r\n  );\r\n}\r\n","const StatisticItem = ({ content, data }) => {\r\n  return (\r\n    <p>\r\n      {content}: {data}\r\n      {content === \"Positive feedback\" ? \"%\" : \"\"}\r\n    </p>\r\n  );\r\n};\r\nexport default StatisticItem;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport StatisticItem from \"../StatisticItem/StatisticItem\";\r\n\r\nexport default function StatisticsList({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      <StatisticItem content=\"Good\" data={good} />\r\n      <StatisticItem content=\"Neutral\" data={neutral} />\r\n      <StatisticItem content=\"Bad\" data={bad} />\r\n      <StatisticItem content=\"Total\" data={total} />\r\n      <StatisticItem content=\"Positive feedback\" data={positivePercentage} />\r\n    </>\r\n  );\r\n}\r\n\r\nStatisticItem.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","const Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","const Notification = ({ message }) => <p>{message}</p>;\r\nexport default Notification;\r\n","import React, { useState } from \"react\";\n\nimport s from \"./App.module.css\";\n\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport StatisticsList from \"../StatisticsList/StatisticsList\";\nimport Section from \"../Section/Section\";\nimport Notification from \"../Notification/Notification\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  function HandlerClick(e) {\n    if (e.target.textContent === \"Good\") {\n      setGood((prevGood) => prevGood + 1);\n    }\n    if (e.target.textContent === \"Neutral\") {\n      setNeutral((prevNesetNeutral) => prevNesetNeutral + 1);\n    }\n    if (e.target.textContent === \"Bad\") {\n      setBad((prevBsetBad) => prevBsetBad + 1);\n    }\n  }\n\n  function countTotalFeedback() {\n    const total = good + neutral + bad;\n    return total;\n  }\n\n  function countPositiveFeedbackPercentage() {\n    const total = countTotalFeedback();\n    const positiv = (total ? (good / total) * 100 : 0).toFixed(2);\n    return positiv;\n  }\n\n  return (\n    <div className={s.App}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLeaveFeedback={HandlerClick} />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <StatisticsList\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__123ua\"};"],"sourceRoot":""}